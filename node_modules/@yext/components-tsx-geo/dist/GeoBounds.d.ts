/**
 * This class represents a bounded coordinate region of a sphere.
 * The bounds are defined by two {@link module:@yext/components-geo~Coordinate Coordinates}: southwest and northeast.
 * If the northeast coordinate does not have a greater latitude and longitude than the soutwest
 * coordinate, the behavior of this object is undefined.
 */
export class GeoBounds {
    /**
     * Create a new {@link module:@yext/components-geo~GeoBounds GeoBounds} with minimal area that
     * contains all the given coordinates
     * @param {module:@yext/components-geo~Coordinate[]} coordinates
     * @returns {module:@yext/components-geo~GeoBounds}
     */
    static fit(coordinates: any): any;
    /**
     * @param {module:@yext/components-geo~Coordinate} sw Southwest coordinate
     * @param {module:@yext/components-geo~Coordinate} ne Northeast coordinate
     */
    constructor(sw: any, ne: any);
    _ne: Coordinate;
    _sw: Coordinate;
    set ne(arg: any);
    /**
     * Northeast coordinate
     * @type {module:@yext/components-geo~Coordinate}
     */
    get ne(): any;
    set sw(arg: any);
    /**
     * Southwest coordinate
     * @type {module:@yext/components-geo~Coordinate}
     */
    get sw(): any;
    /**
     * Whether the coordinate lies within the region defined by the bounds.
     * {@link module:@yext/components-geo~Coordinate#normalLon Normalized longitudes} are used for the
     * bounds and the coordinate.
     * @param {module:@yext/components-geo~Coordinate} coordinate
     * @returns {boolean}
     */
    contains(coordinate: any): boolean;
    /**
     * Extend the bounds if necessary so that the coordinate is contained by them.
     * @param {module:@yext/components-geo~Coordinate} coordinate
     */
    extend(coordinate: any): void;
    /**
     * Calculate the center of the bounds using the given projection.
     * To find the visual center on a Mercator map, use Projection.MERCATOR.
     * To find the center for geolocation or geosearch purposes, use Projection.SPHERICAL.
     * @param {module:@yext/components-geo~Projection} [projection=Projection.SPHERICAL]
     * @returns {module:@yext/components-geo~Coordinate}
     */
    getCenter(projection?: any): any;
}
import { Coordinate } from "./Coordinate.js";
//# sourceMappingURL=GeoBounds.d.ts.map