import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { CollapsibleSection, FilterGroupProvider, HierarchicalFacetDisplay } from './Filters';
import { FacetTitle } from './FacetTiltle';
/**
 * A component that displays the content of a hierarchical facet.
 *
 * @param props - props to render the component
 * @returns A React component for the content of a hierarchical facet
 *
 * @internal
 */
export function HierarchicalFacetContent({ fieldId, label, transformOptions, customCssClasses, delimiter, facet, collapsible = true, defaultExpanded = true, showMoreLimit = 4, }) {
    const options = facet.options || [];
    const transformedOptions = transformOptions ? (transformOptions(options) || []) : options;
    return (_jsxs(FilterGroupProvider, Object.assign({ fieldId: fieldId, defaultExpanded: !collapsible || defaultExpanded }, { children: [_jsx(FacetTitle, { label: label || facet.displayName, customCssClasses: customCssClasses, collapsible: collapsible }, void 0), _jsx(CollapsibleSection, { children: _jsx(HierarchicalFacetDisplay
                // eslint-disable-next-line react-perf/jsx-no-new-object-as-prop
                , { 
                    // eslint-disable-next-line react-perf/jsx-no-new-object-as-prop
                    facet: Object.assign(Object.assign({}, facet), { options: transformedOptions }), delimiter: delimiter, showMoreLimit: showMoreLimit, customCssClasses: customCssClasses }, void 0) }, void 0)] }), void 0));
}
//# sourceMappingURL=HierarchicalFacetContent.js.map