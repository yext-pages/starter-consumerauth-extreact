import { jsx as _jsx } from "react/jsx-runtime";
import { useComposedCssClasses } from '../hooks/useComposedCssClasses';
import classNames from 'classnames';
const builtInCssClasses = {
    verticalResultsLoading: 'opacity-50'
};
/**
 * A Component that displays all the search results for a given vertical.
 *
 * @param props - The props for the Component, including the results and the card type
 *                to be used.
 */
export function VerticalResultsDisplay(props) {
    var _a;
    const { CardComponent, results, isLoading = false, customCssClasses } = props;
    const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);
    if (results.length === 0) {
        return null;
    }
    const resultsClassNames = classNames(cssClasses.verticalResultsContainer, {
        [(_a = cssClasses.verticalResultsLoading) !== null && _a !== void 0 ? _a : '']: isLoading
    });
    return (_jsx("div", Object.assign({ className: resultsClassNames }, { children: results === null || results === void 0 ? void 0 : results.map(result => renderResult(CardComponent, result)) }), void 0));
}
/**
 * Renders a single result using the specified card and configuration.
 *
 * @param CardComponent - The card for the vertical.
 * @param result - The result to render.
 */
function renderResult(CardComponent, result) {
    return _jsx(CardComponent, { result: result }, result.id || result.index);
}
//# sourceMappingURL=VerticalResultsDisplay.js.map