import { Children, cloneElement, isValidElement } from 'react';
/**
 * Recursively performs React.Children.map on a given ReactNode.
 */
export function recursivelyMapChildren(children, elementReplacer) {
    return Children.map(children, (c, index) => {
        if (!isValidElement(c)) {
            return c;
        }
        const replacedElement = elementReplacer(c, index);
        if (!replacedElement || !isValidElement(replacedElement)) {
            return replacedElement;
        }
        const grandchildren = replacedElement.props.children;
        if (!grandchildren) {
            return replacedElement;
        }
        const replacedGrandchildren = recursivelyMapChildren(grandchildren, elementReplacer);
        return cloneElement(replacedElement, { children: replacedGrandchildren });
    });
}
//# sourceMappingURL=recursivelyMapChildren.js.map