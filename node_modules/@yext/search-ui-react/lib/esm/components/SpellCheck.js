import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useSearchState, useSearchActions } from '@yext/search-headless-react';
import classNames from 'classnames';
import { useCallback } from 'react';
import { useComposedCssClasses } from '../hooks/useComposedCssClasses';
import { executeSearch } from '../utils/search-operations';
const builtInCssClasses = {
    spellCheckLoading: 'opacity-50',
    spellCheckContainer: 'text-lg pb-3',
    helpText: 'text-neutral',
    link: 'text-primary font-bold hover:underline focus:underline'
};
/**
 * Renders a suggested query if the Search API provides one.
 *
 * @public
 *
 * @param props - {@link SpellCheckProps}
 * @returns A react component for spell check, or null if none exists
 */
export function SpellCheck({ customCssClasses, onClick }) {
    var _a, _b, _c;
    const verticalKey = (_a = useSearchState(state => state.vertical.verticalKey)) !== null && _a !== void 0 ? _a : '';
    const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);
    const correctedQuery = (_b = useSearchState(state => state.spellCheck.correctedQuery)) !== null && _b !== void 0 ? _b : '';
    const isLoading = useSearchState(state => state.searchStatus.isLoading);
    const containerClassNames = classNames(cssClasses.spellCheckContainer, {
        [(_c = cssClasses.spellCheckLoading) !== null && _c !== void 0 ? _c : '']: isLoading
    });
    const searchActions = useSearchActions();
    const handleClickSuggestion = useCallback(() => {
        searchActions.setQuery(correctedQuery);
        onClick
            ? onClick({ correctedQuery, verticalKey })
            : executeSearch(searchActions);
    }, [searchActions, correctedQuery, onClick, verticalKey]);
    if (!correctedQuery) {
        return null;
    }
    return (_jsxs("div", Object.assign({ className: containerClassNames }, { children: [_jsx("span", Object.assign({ className: cssClasses.helpText }, { children: "Did you mean " }), void 0), _jsx("button", Object.assign({ className: cssClasses.link, onClick: handleClickSuggestion }, { children: correctedQuery }), void 0)] }), void 0));
}
//# sourceMappingURL=SpellCheck.js.map