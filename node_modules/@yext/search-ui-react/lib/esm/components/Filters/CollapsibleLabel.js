import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import classNames from 'classnames';
import { ChevronIcon } from '../../icons/ChevronIcon';
import { useFilterGroupContext } from './FilterGroupContext';
import { useComposedCssClasses } from '../../hooks/useComposedCssClasses';
export const builtInCssClasses = {
    label: 'text-neutral-dark text-sm font-medium text-left',
};
/**
 * CollapsibleLabel is a button for collapsing and expanding filters within a parent
 * {@link Filters.FilterGroupProvider}.
 *
 * For more customization, use {@link Filters.FilterGroupContext} directly.
 *
 * @param props - {@link Filters.CollapsibleLabelProps}
 *
 * @public
 */
export function CollapsibleLabel({ label, customCssClasses }) {
    const { isExpanded, getToggleProps } = useFilterGroupContext();
    const iconClassName = classNames('w-3 text-gray-400', {
        'transform rotate-180': !isExpanded
    });
    const cssClasses = useComposedCssClasses(builtInCssClasses, customCssClasses);
    return (_jsxs("button", Object.assign({ className: 'w-full flex justify-between items-center mb-4' }, getToggleProps(), { children: [_jsx("div", Object.assign({ className: cssClasses.label }, { children: label }), void 0), _jsx(ChevronIcon, { className: iconClassName }, void 0)] }), void 0));
}
//# sourceMappingURL=CollapsibleLabel.js.map