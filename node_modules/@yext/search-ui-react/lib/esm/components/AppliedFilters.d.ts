/// <reference types="react" />
/**
 * The CSS class interface used for {@link AppliedFilters}.
 *
 * @public
 */
export interface AppliedFiltersCssClasses {
    appliedFiltersContainer?: string;
    appliedFiltersLoading?: string;
    nlpFilter?: string;
    removableFilter?: string;
    filterLabel?: string;
    clearAllButton?: string;
}
export declare const builtInCssClasses: Readonly<AppliedFiltersCssClasses>;
/**
 * Properties for {@link AppliedFilters}.
 *
 * @public
 */
export interface AppliedFiltersProps {
    /** List of filters that should not be displayed. By default, builtin.entityType will be hidden. */
    hiddenFields?: string[];
    /** A set of facet fieldIds that should be interpreted as "hierarchical". */
    hierarchicalFacetsFieldIds?: string[];
    /** {@inheritDoc HierarchicalFacetsProps.delimiter} */
    hierarchicalFacetsDelimiter?: string;
    /** CSS classes for customizing the component styling. */
    customCssClasses?: AppliedFiltersCssClasses;
}
/**
 * A component that displays a list of filters applied to the current vertical
 * search, which may include any selected options from facets, NLP filters, and
 * field value static filters.
 *
 * @public
 *
 * @param props - {@link AppliedFiltersProps}
 * @returns A React element for the applied filters
 */
export declare function AppliedFilters(props: AppliedFiltersProps): JSX.Element;
//# sourceMappingURL=AppliedFilters.d.ts.map