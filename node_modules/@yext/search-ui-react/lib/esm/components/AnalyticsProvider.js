var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import { provideAnalytics } from '@yext/analytics';
import { AnalyticsContext } from '../hooks/useAnalytics';
/**
 * A higher-order component which provides analytics for its children.
 *
 * @public
 *
 * @param props - The configuration for the analytics service
 * @returns A React element that provides analytics context
 */
export function AnalyticsProvider(props) {
    const { children } = props, analyticsConfig = __rest(props, ["children"]);
    const analyticsReporter = provideAnalytics(analyticsConfig);
    return (_jsx(AnalyticsContext.Provider, Object.assign({ value: analyticsReporter }, { children: children }), void 0));
}
//# sourceMappingURL=AnalyticsProvider.js.map