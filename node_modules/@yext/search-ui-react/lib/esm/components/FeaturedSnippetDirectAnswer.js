import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { renderHighlightedValue } from './utils/renderHighlightedValue';
/**
 * Renders a featured snippet direct answer provided by the Search API.
 *
 * @internal
 */
export function FeaturedSnippetDirectAnswer({ result, readMoreClickHandler, cssClasses = {} }) {
    const answer = result.fieldType === 'multi_line_text' && result.value;
    // TODO: SLAP-2340, update rich text snippets to convert the markdown
    if (result.fieldType === 'rich_text') {
        console.warn('Rendering markdown for rich text direct answer is currently not supported. Displaying the unrendered markdown string as is.');
    }
    const snippet = renderHighlightedValue(result.snippet, { highlighted: cssClasses.highlighted });
    const link = result.relatedResult.link || result.relatedResult.rawData.landingPageUrl;
    const name = result.relatedResult.name;
    const snippetLinkMessage = 'Read more about ';
    return (_jsxs("div", Object.assign({ className: cssClasses.answerContainer }, { children: [answer &&
                _jsx("div", Object.assign({ className: cssClasses.header }, { children: answer }), void 0), _jsxs("div", Object.assign({ className: cssClasses.content }, { children: [_jsx("div", Object.assign({ className: cssClasses.body }, { children: snippet }), void 0), link && name && _jsxs("div", Object.assign({ className: 'pt-4 text-neutral' }, { children: [snippetLinkMessage, _jsx("a", Object.assign({ className: 'text-primary', href: link, onClick: readMoreClickHandler }, { children: name }), void 0)] }), void 0)] }), void 0)] }), void 0));
}
//# sourceMappingURL=FeaturedSnippetDirectAnswer.js.map