/// <reference types="react" />
/**
 * The CSS class interface for the Geolocation component.
 *
 * @public
 */
export interface GeolocationCssClasses {
    geolocationContainer?: string;
    button?: string;
    iconContainer?: string;
}
/**
 * The props for the Geolocation component.
 *
 * @public
 */
export interface GeolocationProps {
    /**
     * Configuration used when collecting the user's location.
     * Definition: {@link https://w3c.github.io/geolocation-api/#position_options_interface}.
     */
    geolocationOptions?: PositionOptions;
    /**
     * The radius, in miles, around the user's location to find results. Defaults to 50.
     * If location accuracy is low, a larger radius may be used automatically.
     */
    radius?: number;
    /** The label for the button. Defaults to 'Use my location'. */
    label?: string;
    /** Custom icon component to display along with the button. */
    GeolocationIcon?: React.FunctionComponent;
    /**
     * A function which is called when the geolocation button is clicked,
     * after user's position is successfully determined.
     */
    handleClick?: (position: GeolocationPosition) => void;
    /** CSS classes for customizing the component styling. */
    customCssClasses?: GeolocationCssClasses;
}
/**
 * A React Component which collects location information to create a
 * location filter and perform a new search.
 *
 * @public
 *
 * @param props - {@link GeolocationProps}
 * @returns A react component for geolocation
 */
export declare function Geolocation({ geolocationOptions, radius, label, GeolocationIcon, handleClick, customCssClasses, }: GeolocationProps): JSX.Element | null;
//# sourceMappingURL=Geolocation.d.ts.map