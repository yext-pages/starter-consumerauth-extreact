/// <reference types="react" />
import { Map, MapboxOptions, LngLatBounds, LngLat } from 'mapbox-gl';
import { Result } from '@yext/search-headless-react';
/**
 * A functional component that can be used to render a custom marker on the map.
 *
 * @public
 */
export declare type PinComponent<T> = (props: {
    index: number;
    mapbox: Map;
    result: Result<T>;
}) => JSX.Element;
/**
 * A function use to derive a result's coordinate.
 *
 * @public
 */
export declare type CoordinateGetter<T> = (result: Result<T>) => Coordinate | undefined;
/**
 * Coordinate use to represent the result's location on a map.
 *
 * @public
 */
export interface Coordinate {
    /** The latitude of the location. */
    latitude: number;
    /** The longitude of the location. */
    longitude: number;
}
/**
 * A function which is called when user drag the map.
 *
 * @public
 */
export declare type OnDragHandler = (center: LngLat, bounds: LngLatBounds) => void;
/**
 * Props for the {@link MapboxMap} component.
 * The type param "T" represents the type of "rawData" field of the results use in the map.
 *
 * @public
 */
export interface MapboxMapProps<T> {
    /** Mapbox access token. */
    mapboxAccessToken: string;
    /** Interface for map customization derived from Mapbox GL's Map options. */
    mapboxOptions?: Omit<MapboxOptions, 'container'>;
    /**
     * Custom Pin component to render for markers on the map.
     * By default, the built-in marker image from Mapbox GL is used.
     */
    PinComponent?: PinComponent<T>;
    /**
     * A function to derive a result's coordinate for the corresponding marker's location on the map.
     * By default, "yextDisplayCoordinate" field is used as the result's display coordinate.
     */
    getCoordinate?: CoordinateGetter<T>;
    /** {@inheritDoc OnDragHandler} */
    onDrag?: OnDragHandler;
}
/**
 * A component that renders a map with markers to show result locations using Mapbox GL.
 *
 * @remarks
 * For the map to work properly, be sure to include Mapbox GL stylesheet in the application.
 *
 * @example
 * For instance, user may add the following import statement in their application's index file
 * or in the file where `MapboxMap` is used:
 * `import 'mapbox-gl/dist/mapbox-gl.css';`
 *
 * Or, user may add a stylesheet link in their html page:
 * `<link href="https://api.mapbox.com/mapbox-gl-js/v2.9.2/mapbox-gl.css" rel="stylesheet" />`
 *
 * @param props - {@link MapboxMapProps}
 * @returns A React element containing a Mapbox Map
 *
 * @public
 */
export declare function MapboxMap<T>({ mapboxAccessToken, mapboxOptions, PinComponent, getCoordinate, onDrag }: MapboxMapProps<T>): JSX.Element;
//# sourceMappingURL=MapboxMap.d.ts.map