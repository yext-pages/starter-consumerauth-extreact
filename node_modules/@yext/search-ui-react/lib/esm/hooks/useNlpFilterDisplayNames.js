import { useSearchState } from '@yext/search-headless-react';
import { useMemo } from 'react';
import { isDuplicateFieldValueFilter } from '../utils/filterutils';
/**
 * Returns a memoized array of nlp filter display values, with hiddenFields and duplicate filters removed.
 *
 * @internal
 */
export function useNlpFilterDisplayNames(removableFilters, hiddenFields) {
    const nlpFilters = useSearchState(state => state.vertical.appliedQueryFilters);
    return useMemo(() => {
        var _a;
        return (_a = nlpFilters === null || nlpFilters === void 0 ? void 0 : nlpFilters.filter(({ filter }) => {
            if (hiddenFields.includes(filter.fieldId)) {
                return false;
            }
            const duplicateFilter = removableFilters.find(f => isDuplicateFieldValueFilter(f, filter));
            return !duplicateFilter;
        }).map(f => f.displayValue)) !== null && _a !== void 0 ? _a : [];
    }, [hiddenFields, nlpFilters, removableFilters]);
}
//# sourceMappingURL=useNlpFilterDisplayNames.js.map