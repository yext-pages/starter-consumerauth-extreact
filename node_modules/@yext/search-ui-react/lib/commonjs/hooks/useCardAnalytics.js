"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCardAnalytics = void 0;
const search_headless_react_1 = require("@yext/search-headless-react");
const react_1 = require("react");
const useAnalytics_1 = require("./useAnalytics");
function isDirectAnswer(data) {
    var _a, _b;
    return ((_a = data) === null || _a === void 0 ? void 0 : _a.type) === search_headless_react_1.DirectAnswerType.FeaturedSnippet ||
        ((_b = data) === null || _b === void 0 ? void 0 : _b.type) === search_headless_react_1.DirectAnswerType.FieldValue;
}
function useCardAnalytics() {
    const analytics = (0, useAnalytics_1.useAnalytics)();
    const verticalKey = (0, search_headless_react_1.useSearchState)(state => state.vertical.verticalKey);
    const queryId = (0, search_headless_react_1.useSearchState)(state => state.query.queryId);
    const reportCtaEvent = (0, react_1.useCallback)((result, eventType) => {
        let url, entityId, fieldName;
        let directAnswer = false;
        if (isDirectAnswer(result)) {
            url = result.relatedResult.link;
            entityId = result.relatedResult.id;
            fieldName = result.type === search_headless_react_1.DirectAnswerType.FeaturedSnippet
                ? undefined
                : result.fieldName;
            directAnswer = true;
        }
        else {
            url = result.link;
            entityId = result.id;
        }
        if (!queryId) {
            console.error('Unable to report a CTA event. Missing field: queryId.');
            return;
        }
        if (!entityId) {
            console.error('Unable to report a CTA event. Missing field: entityId.');
            return;
        }
        analytics === null || analytics === void 0 ? void 0 : analytics.report({
            type: eventType,
            entityId,
            searcher: verticalKey ? 'VERTICAL' : 'UNIVERSAL',
            queryId,
            verticalKey: verticalKey || '',
            url,
            fieldName,
            directAnswer
        });
    }, [analytics, queryId, verticalKey]);
    const reportFeedbackEvent = (0, react_1.useCallback)((result, feedbackType) => {
        if (!queryId) {
            console.error('Unable to report a result feedback event. Missing field: queryId.');
            return;
        }
        let directAnswer = false;
        let entityId;
        if (isDirectAnswer(result)) {
            directAnswer = true;
            entityId = result.relatedResult.id;
        }
        else {
            entityId = result.id;
        }
        analytics === null || analytics === void 0 ? void 0 : analytics.report({
            type: feedbackType,
            entityId,
            searcher: verticalKey ? 'VERTICAL' : 'UNIVERSAL',
            queryId,
            verticalKey: verticalKey || '',
            directAnswer
        });
    }, [analytics, queryId, verticalKey]);
    const reportAnalyticsEvent = (0, react_1.useCallback)((cardResult, analyticsEventType) => {
        if (!analytics) {
            return;
        }
        if (analyticsEventType === 'TITLE_CLICK' || analyticsEventType === 'CTA_CLICK') {
            reportCtaEvent(cardResult, analyticsEventType);
        }
        if (analyticsEventType === 'THUMBS_DOWN' || analyticsEventType === 'THUMBS_UP') {
            reportFeedbackEvent(cardResult, analyticsEventType);
        }
    }, [analytics, reportCtaEvent, reportFeedbackEvent]);
    return reportAnalyticsEvent;
}
exports.useCardAnalytics = useCardAnalytics;
//# sourceMappingURL=useCardAnalytics.js.map