"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useNlpFilterDisplayNames = void 0;
const search_headless_react_1 = require("@yext/search-headless-react");
const react_1 = require("react");
const filterutils_1 = require("../utils/filterutils");
/**
 * Returns a memoized array of nlp filter display values, with hiddenFields and duplicate filters removed.
 *
 * @internal
 */
function useNlpFilterDisplayNames(removableFilters, hiddenFields) {
    const nlpFilters = (0, search_headless_react_1.useSearchState)(state => state.vertical.appliedQueryFilters);
    return (0, react_1.useMemo)(() => {
        var _a;
        return (_a = nlpFilters === null || nlpFilters === void 0 ? void 0 : nlpFilters.filter(({ filter }) => {
            if (hiddenFields.includes(filter.fieldId)) {
                return false;
            }
            const duplicateFilter = removableFilters.find(f => (0, filterutils_1.isDuplicateFieldValueFilter)(f, filter));
            return !duplicateFilter;
        }).map(f => f.displayValue)) !== null && _a !== void 0 ? _a : [];
    }, [hiddenFields, nlpFilters, removableFilters]);
}
exports.useNlpFilterDisplayNames = useNlpFilterDisplayNames;
//# sourceMappingURL=useNlpFilterDisplayNames.js.map