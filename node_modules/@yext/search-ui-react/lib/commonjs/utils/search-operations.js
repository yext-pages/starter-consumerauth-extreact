"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSearchIntents = exports.executeAutocomplete = exports.executeSearch = void 0;
const search_headless_react_1 = require("@yext/search-headless-react");
/**
 * Executes a universal/vertical search.
 *
 * @public
 */
async function executeSearch(searchActions) {
    const isVertical = searchActions.state.meta.searchType === search_headless_react_1.SearchTypeEnum.Vertical;
    try {
        isVertical
            ? searchActions.executeVerticalQuery()
            : searchActions.executeUniversalQuery();
    }
    catch (e) {
        console.error(`Error occured executing a ${isVertical ? 'vertical' : 'universal'} search.\n`, e);
    }
}
exports.executeSearch = executeSearch;
/**
 * Executes a universal/vertical autocomplete search and return the corresponding response.
 *
 * @public
 */
async function executeAutocomplete(searchActions) {
    const isVertical = searchActions.state.meta.searchType === search_headless_react_1.SearchTypeEnum.Vertical;
    try {
        return isVertical
            ? searchActions.executeVerticalAutocomplete()
            : searchActions.executeUniversalAutocomplete();
    }
    catch (e) {
        console.error(`Error occured executing a ${isVertical ? 'vertical' : 'universal'} autocomplete search.\n`, e);
    }
}
exports.executeAutocomplete = executeAutocomplete;
/**
 * Get search intents of the current query stored in headless using autocomplete request.
 *
 * @public
 */
async function getSearchIntents(searchActions) {
    const results = await executeAutocomplete(searchActions);
    return results === null || results === void 0 ? void 0 : results.inputIntents;
}
exports.getSearchIntents = getSearchIntents;
//# sourceMappingURL=search-operations.js.map