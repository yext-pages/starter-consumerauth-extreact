"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropdownItemWithIndex = exports.DropdownItem = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const DropdownContext_1 = require("./DropdownContext");
const FocusContext_1 = require("./FocusContext");
const generateDropdownId_1 = require("./generateDropdownId");
const InputContext_1 = require("./InputContext");
/**
 * A wrapper component for specifying a DropdownItemWithIndex.
 * The index will be automatically provided by the Dropdown component instance.
 *
 * @public
 */
function DropdownItem(_props) { return null; }
exports.DropdownItem = DropdownItem;
function DropdownItemWithIndex(props) {
    const { children, value, index, className, focusedClassName, itemData, onClick, ariaLabel } = props;
    const { toggleDropdown, onSelect, screenReaderUUID } = (0, DropdownContext_1.useDropdownContext)();
    const { focusedIndex, updateFocusedItem } = (0, FocusContext_1.useFocusContext)();
    const { setValue, setLastTypedOrSubmittedValue } = (0, InputContext_1.useInputContext)();
    const isFocused = focusedIndex === index;
    const handleClick = (0, react_1.useCallback)(() => {
        toggleDropdown(false);
        updateFocusedItem(-1);
        setLastTypedOrSubmittedValue(value);
        setValue(value);
        onSelect === null || onSelect === void 0 ? void 0 : onSelect(value, index, itemData);
        onClick === null || onClick === void 0 ? void 0 : onClick(value, index, itemData);
    }, [
        index,
        itemData,
        onClick,
        onSelect,
        setLastTypedOrSubmittedValue,
        setValue,
        toggleDropdown,
        updateFocusedItem,
        value
    ]);
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ id: (0, generateDropdownId_1.generateDropdownId)(screenReaderUUID, index), tabIndex: 0, className: isFocused ? focusedClassName : className, onClick: handleClick, "aria-label": typeof ariaLabel === 'function' ? ariaLabel(value) : ariaLabel }, { children: children }), void 0));
}
exports.DropdownItemWithIndex = DropdownItemWithIndex;
//# sourceMappingURL=DropdownItem.js.map