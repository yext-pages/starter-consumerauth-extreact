"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplyFiltersButton = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const search_headless_react_1 = require("@yext/search-headless-react");
const react_1 = require("react");
const hooks_1 = require("../hooks");
const filterutils_1 = require("../utils/filterutils");
const search_operations_1 = require("../utils/search-operations");
const builtInCssClasses = {
    button: 'border border-gray-300 px-2.5 py-1 rounded-md text-primary bg-white shadow-md sticky bottom-3'
};
/**
 * Runs a vertical search.
 * By default has `position: sticky` styling that anchors it to the bottom of the page.
 *
 * @remarks
 * This is intended to be used when `searchOnChange` field is set to false on all
 * the Facets/StaticFilters components.
 *
 * @public
 */
function ApplyFiltersButton({ customCssClasses, label = 'Apply Filters' }) {
    const cssClasses = (0, hooks_1.useComposedCssClasses)(builtInCssClasses, customCssClasses);
    const searchActions = (0, search_headless_react_1.useSearchActions)();
    const handleClick = (0, react_1.useCallback)(() => {
        searchActions.setOffset(0);
        (0, filterutils_1.clearStaticRangeFilters)(searchActions, (0, filterutils_1.getSelectedNumericalFacetFields)(searchActions));
        (0, search_operations_1.executeSearch)(searchActions);
    }, [searchActions]);
    return ((0, jsx_runtime_1.jsx)("button", Object.assign({ onClick: handleClick, className: cssClasses.button }, { children: label }), void 0));
}
exports.ApplyFiltersButton = ApplyFiltersButton;
//# sourceMappingURL=ApplyFiltersButton.js.map