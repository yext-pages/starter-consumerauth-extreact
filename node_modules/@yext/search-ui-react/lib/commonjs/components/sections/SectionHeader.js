"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SectionHeader = exports.builtInCssClasses = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const AppliedFiltersDisplay_1 = require("../AppliedFiltersDisplay");
const CollectionIcon_1 = require("../../icons/CollectionIcon");
const search_headless_react_1 = require("@yext/search-headless-react");
const classnames_1 = __importDefault(require("classnames"));
const useAnalytics_1 = require("../../hooks/useAnalytics");
const react_1 = require("react");
const FALLBACK_CSS_CLASSES = {};
exports.builtInCssClasses = {
    sectionHeaderContainer: 'flex items-center w-full pl-1 mb-4',
    sectionHeaderIconContainer: 'w-5 h-5',
    sectionHeaderLabel: 'font-bold text-neutral-dark text-base pl-3',
    viewMoreContainer: 'flex justify-end flex-grow ml-auto font-medium text-neutral-dark',
    viewMoreLink: 'text-primary pr-1 pl-3',
    appliedFiltersContainer: 'ml-3 flex flex-wrap',
    nlpFilter: 'border border-gray-200 rounded-3xl px-3 py-1.5 text-sm font-medium text-neutral-dark mr-2',
    removableFilter: 'flex items-center border border-gray-200 rounded-3xl px-3 py-1.5 text-sm font-medium text-neutral-dark mr-2'
};
/**
 * The header of a section which includes an icon, the section title, applied query filters, and optionally
 * a view all button.
 *
 * @param props - {@link SectionHeaderProps}
 * @returns A React element for a Section Header
 */
function SectionHeader(props) {
    var _a;
    const { label, verticalKey, viewAllButton = false, appliedQueryFilters, cssClasses = FALLBACK_CSS_CLASSES, getViewAllUrl } = props;
    const latestQuery = (0, search_headless_react_1.useSearchState)(state => state.query.mostRecentSearch);
    const nlpFilterDisplayNames = appliedQueryFilters === null || appliedQueryFilters === void 0 ? void 0 : appliedQueryFilters.map(f => f.displayValue);
    const analytics = (0, useAnalytics_1.useAnalytics)();
    const queryId = (0, search_headless_react_1.useSearchState)(state => state.query.queryId);
    const isLoading = (0, search_headless_react_1.useSearchState)(state => state.searchStatus.isLoading);
    cssClasses.appliedFiltersContainer = (0, classnames_1.default)(cssClasses.appliedFiltersContainer, {
        [(_a = cssClasses.appliedFiltersLoading) !== null && _a !== void 0 ? _a : '']: isLoading
    });
    const href = getViewAllUrl
        ? getViewAllUrl({ verticalKey, query: latestQuery })
        : `/${verticalKey}?query=${latestQuery}`;
    const handleClickViewAllButton = (0, react_1.useCallback)(() => {
        if (!analytics) {
            return;
        }
        if (!queryId) {
            console.error('Unable to report a vertical view all event. Missing field: queryId.');
            return;
        }
        analytics === null || analytics === void 0 ? void 0 : analytics.report({
            type: 'VERTICAL_VIEW_ALL',
            queryId,
            verticalKey
        });
    }, [analytics, queryId, verticalKey]);
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: cssClasses.sectionHeaderContainer }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: cssClasses.sectionHeaderIconContainer }, { children: (0, jsx_runtime_1.jsx)(CollectionIcon_1.CollectionIcon, {}, void 0) }), void 0), (0, jsx_runtime_1.jsx)("h2", Object.assign({ className: cssClasses.sectionHeaderLabel }, { children: label }), void 0), appliedQueryFilters &&
                (0, jsx_runtime_1.jsx)(AppliedFiltersDisplay_1.AppliedFiltersDisplay, { nlpFilterDisplayNames: nlpFilterDisplayNames, cssClasses: cssClasses }, void 0), viewAllButton &&
                (0, jsx_runtime_1.jsx)("div", Object.assign({ className: cssClasses.viewMoreContainer }, { children: (0, jsx_runtime_1.jsx)("a", Object.assign({ className: cssClasses.viewMoreLink, href: href }, { children: (0, jsx_runtime_1.jsx)("button", Object.assign({ onClick: handleClickViewAllButton }, { children: "View all" }), void 0) }), void 0) }), void 0)] }), void 0));
}
exports.SectionHeader = SectionHeader;
//# sourceMappingURL=SectionHeader.js.map