/// <reference types="react" />
import { RangeInputCssClasses } from './Filters';
import { FilterGroupCssClasses } from './FilterGroup';
import { NumberRangeValue } from '@yext/search-headless-react';
import { StandardFacetsProps } from './StandardFacets';
/**
 * The CSS class interface for {@link NumericalFacets}.
 *
 * @public
 */
export interface NumericalFacetsCssClasses extends FilterGroupCssClasses, RangeInputCssClasses {
    numericalFacetsContainer?: string;
    divider?: string;
}
/**
 * Props for the {@link NumericalFacets} component.
 *
 * @deprecated Use {@link NumericalFacet} with {@link Facets} instead.
 * @public
 */
export interface NumericalFacetsProps extends Omit<StandardFacetsProps, 'excludedFieldIds'> {
    /** List of filter ids to render as numerical facets. */
    includedFieldIds?: string[];
    /**
     * Returns the filter's display name based on the range values which is used when the filter
     * is displayed by other components such as AppliedFilters.
     *
     * @remarks
     * By default, the displayName separates the range with a dash such as '10 - 20'.
     * If the range is unbounded, it will display as 'Up to 20' or 'Over 10'.
     */
    getFilterDisplayName?: (value: NumberRangeValue) => string;
    /**
     * An optional element which renders in front of the input text.
     */
    inputPrefix?: JSX.Element;
    /** CSS classes for customizing the component styling. */
    customCssClasses?: NumericalFacetsCssClasses;
}
/**
 * A component that displays numerical facets applicable to the current vertical search.
 *
 * @param props - {@link NumericalFacetsProps}
 * @returns A React component for facets
 *
 * @deprecated Use {@link NumericalFacet} with {@link Facets} instead.
 * @public
 */
export declare function NumericalFacets({ searchOnChange, includedFieldIds, getFilterDisplayName, inputPrefix, customCssClasses, ...filterGroupProps }: NumericalFacetsProps): JSX.Element;
//# sourceMappingURL=NumericalFacets.d.ts.map