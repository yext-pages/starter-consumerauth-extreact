"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HierarchicalFacetContent = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const Filters_1 = require("./Filters");
const FacetTiltle_1 = require("./FacetTiltle");
/**
 * A component that displays the content of a hierarchical facet.
 *
 * @param props - props to render the component
 * @returns A React component for the content of a hierarchical facet
 *
 * @internal
 */
function HierarchicalFacetContent({ fieldId, label, transformOptions, customCssClasses, delimiter, facet, collapsible = true, defaultExpanded = true, showMoreLimit = 4, }) {
    const options = facet.options || [];
    const transformedOptions = transformOptions ? (transformOptions(options) || []) : options;
    return ((0, jsx_runtime_1.jsxs)(Filters_1.FilterGroupProvider, Object.assign({ fieldId: fieldId, defaultExpanded: !collapsible || defaultExpanded }, { children: [(0, jsx_runtime_1.jsx)(FacetTiltle_1.FacetTitle, { label: label || facet.displayName, customCssClasses: customCssClasses, collapsible: collapsible }, void 0), (0, jsx_runtime_1.jsx)(Filters_1.CollapsibleSection, { children: (0, jsx_runtime_1.jsx)(Filters_1.HierarchicalFacetDisplay
                // eslint-disable-next-line react-perf/jsx-no-new-object-as-prop
                , { 
                    // eslint-disable-next-line react-perf/jsx-no-new-object-as-prop
                    facet: Object.assign(Object.assign({}, facet), { options: transformedOptions }), delimiter: delimiter, showMoreLimit: showMoreLimit, customCssClasses: customCssClasses }, void 0) }, void 0)] }), void 0));
}
exports.HierarchicalFacetContent = HierarchicalFacetContent;
//# sourceMappingURL=HierarchicalFacetContent.js.map