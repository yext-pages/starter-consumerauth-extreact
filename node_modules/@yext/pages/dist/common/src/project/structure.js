import pathLib from "path";
import merge from "lodash/merge.js";
import { Path } from "./path.js";
const defaultProjectStructureConfig = {
  filepathsConfig: {
    templatesRoot: "src/templates",
    sitesConfigRoot: "sites-config",
    distRoot: "dist",
    hydrationBundleOutputRoot: "hydration_templates",
    serverBundleOutputRoot: "assets/server"
  },
  filenamesConfig: {
    ciConfig: "ci.json",
    featuresConfig: "features.json",
    siteStreamConfig: "site-stream.json"
  },
  envVarConfig: {
    envVarDir: "",
    envVarPrefix: "YEXT_PUBLIC"
  }
};
class ProjectStructure {
  #config;
  sitesConfigRoot;
  templatesRoot;
  scope;
  scopedTemplatesPath;
  scopedSitesConfigPath;
  distRoot;
  hydrationBundleOutputRoot;
  serverBundleOutputRoot;
  ciConfig;
  featuresConfig;
  envVarDir;
  envVarPrefix;
  siteStreamConfig;
  constructor(config) {
    this.#config = merge(defaultProjectStructureConfig, config);
    this.sitesConfigRoot = new Path(
      this.#config.filepathsConfig.sitesConfigRoot
    );
    this.templatesRoot = new Path(this.#config.filepathsConfig.templatesRoot);
    const scope = this.#config.filepathsConfig.scope;
    if (scope) {
      this.scope = scope;
      this.scopedSitesConfigPath = new Path(
        pathLib.join(this.sitesConfigRoot.path, scope)
      );
      this.scopedTemplatesPath = new Path(
        pathLib.join(this.templatesRoot.path, scope)
      );
    }
    this.distRoot = new Path(this.#config.filepathsConfig.distRoot);
    this.hydrationBundleOutputRoot = new Path(
      this.#config.filepathsConfig.distRoot + "/" + this.#config.filepathsConfig.hydrationBundleOutputRoot
    );
    this.serverBundleOutputRoot = new Path(
      this.#config.filepathsConfig.distRoot + "/" + this.#config.filepathsConfig.serverBundleOutputRoot
    );
    this.ciConfig = this.#config.filenamesConfig.ciConfig;
    this.featuresConfig = this.#config.filenamesConfig.featuresConfig;
    this.envVarDir = this.#config.envVarConfig.envVarDir;
    this.envVarPrefix = this.#config.envVarConfig.envVarPrefix;
    this.siteStreamConfig = this.#config.filenamesConfig.siteStreamConfig;
  }
}
export {
  ProjectStructure,
  defaultProjectStructureConfig
};
