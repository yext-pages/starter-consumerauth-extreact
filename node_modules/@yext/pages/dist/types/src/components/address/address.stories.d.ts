/// <reference types="react" />
import { ComponentStory, ComponentMeta } from "@storybook/react";
import { Address as AddressComponent } from ".";
declare const meta: ComponentMeta<typeof AddressComponent>;
export default meta;
export declare const Address: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_Arlington: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_Berlin: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_Chicago: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_London: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_Miami: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_NewYork: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_Paris: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
export declare const Address_SanFrancisco: ComponentStory<{
    ({ address, lines, separator, ...props }: import("./types").AddressProps): JSX.Element;
    defaultProps: {
        separator: string;
    };
}>;
