/// <reference types="react" />
/**
 * The type definition for an address.
 *
 * @public
 */
export interface AddressType {
    line1: string;
    line2?: string;
    line3?: string;
    city: string;
    region?: string;
    postalCode: string;
    countryCode: string;
    sublocality?: string;
    extraDescription?: string;
    localizedRegionName?: string;
    localizedCountryName?: string;
}
export declare type AddressLine = (keyof AddressType | ",")[];
/**
 * The shape of the data passed to {@link Address}.
 *
 * @public
 */
export interface AddressProps extends React.HTMLProps<HTMLDivElement> {
    address: AddressType;
    lines?: AddressLine[];
    separator?: string;
}
/**
 * The shape of the data passed to {@link AddressLine}.
 *
 * @public
 */
export declare type AddressLineProps = {
    address: AddressType;
    line: AddressLine;
    separator?: string;
};
/**
 * The available listing publishers
 *
 * @public
 */
export declare const ListingPublisherOption: {
    readonly GOOGLEMYBUSINESS: "GOOGLEMYBUSINESS";
};
/**
 * The type definition for the listing publisher
 *
 * @public
 */
export declare type ListingPublisher = typeof ListingPublisherOption[keyof typeof ListingPublisherOption];
/**
 * The type definition for a Listing
 *
 * @public
 */
export interface ListingType {
    listingUrl: string;
    publisher?: ListingPublisher;
}
/**
 * The available map providers
 *
 * @public
 */
export declare const MapProviderOption: {
    readonly GOOGLE: "google";
    readonly APPLE: "apple";
    readonly BING: "bing";
};
/**
 * The type definition for the map provider
 *
 * @public
 */
export declare type MapProvider = typeof MapProviderOption[keyof typeof MapProviderOption];
/**
 * The Yext profile fields used to create a getDirections URL
 */
export interface GetDirectionsConfig {
    provider?: MapProvider;
    route?: boolean;
}
