import React, { useRef, useState } from "react";
import { Map, Marker } from ".";
import { MAP_MULTIPLE_LOCATIONS } from "./sampleData.js";
const meta = {
  title: "components/Map",
  component: Map
};
var map_stories_default = meta;
const Template = (args) => /* @__PURE__ */ React.createElement(Map, {
  ...args
});
const Simple_Map = Template.bind({});
Simple_Map.args = {
  clientKey: "gme-yextinc"
};
const Map_With_Marker = () => {
  return /* @__PURE__ */ React.createElement(Map, {
    clientKey: "gme-yextinc"
  }, /* @__PURE__ */ React.createElement(Marker, {
    id: "1",
    onClick: () => window.open("https://yext.com", "_blank"),
    coordinate: { latitude: 38.8974, longitude: -77.0638 }
  }));
};
const Map_With_Current_Center_And_Zoom = () => {
  const mapRef = useRef(null);
  const [currentCenter, setCurrentCenter] = useState({
    latitude: 37.83,
    longitude: -77.58
  });
  const [currentZoom, setCurrentZoom] = useState(5);
  const panHandler = () => {
    if (mapRef.current) {
      setCurrentCenter(mapRef.current.getCenter());
      setCurrentZoom(mapRef.current.getZoom());
    }
  };
  return /* @__PURE__ */ React.createElement(Map, {
    clientKey: "gme-yextinc",
    defaultZoom: 5,
    defaultCenter: { latitude: 37.83, longitude: -77.58 },
    mapRef,
    panHandler
  }, /* @__PURE__ */ React.createElement("div", {
    style: { position: "absolute", backgroundColor: "white", padding: 4 }
  }, /* @__PURE__ */ React.createElement("div", null, "lat: ", currentCenter.latitude.toFixed(2), ", long:", " ", currentCenter.longitude.toFixed(2)), /* @__PURE__ */ React.createElement("div", null, "zoom: ", currentZoom)), /* @__PURE__ */ React.createElement(Marker, {
    id: "1",
    onClick: () => window.open("https://yext.com", "_blank"),
    coordinate: { latitude: 38.8974, longitude: -77.0638 }
  }));
};
const Multiple_Maps = () => {
  return /* @__PURE__ */ React.createElement("div", null, /* @__PURE__ */ React.createElement(Map, {
    clientKey: "gme-yextinc",
    bounds: [{ latitude: 38.8974, longitude: -77.0638 }],
    singleZoom: 16
  }, /* @__PURE__ */ React.createElement(Marker, {
    id: "1",
    coordinate: { latitude: 38.8974, longitude: -77.0638 }
  })), /* @__PURE__ */ React.createElement(Map, {
    clientKey: "gme-yextinc",
    defaultCenter: { latitude: 38.8974, longitude: -77.0638 },
    defaultZoom: 16
  }, /* @__PURE__ */ React.createElement(Marker, {
    id: "1",
    coordinate: { latitude: 38.8974, longitude: -77.0638 }
  })));
};
const Map_With_Inline_Svg = () => {
  return /* @__PURE__ */ React.createElement(Map, {
    clientKey: "gme-yextinc"
  }, /* @__PURE__ */ React.createElement(Marker, {
    id: "1",
    coordinate: { latitude: 38.8974, longitude: -77.0638 }
  }, /* @__PURE__ */ React.createElement("svg", {
    width: "30",
    height: "38",
    fill: "#F46036",
    viewBox: "0 0 30 38"
  }, /* @__PURE__ */ React.createElement("path", {
    x: "50%",
    y: "40%",
    d: "M30 15.0882C30 23.4212 23.3333 30.7353 15 38C7.22222 31.2941 0 23.4212 0 15.0882C0 6.75523 6.71573 0 15 0C23.2843 0 30 6.75523 30 15.0882Z"
  }))));
};
const Map_With_Single_Interactive_Marker = () => {
  const [clicked, setClicked] = useState("");
  const [focused, setFocused] = useState("");
  const [hovered, setHovered] = useState("");
  return /* @__PURE__ */ React.createElement(Map, {
    clientKey: "gme-yextinc"
  }, /* @__PURE__ */ React.createElement(Marker, {
    coordinate: { latitude: 38.8954, longitude: -77.0698 },
    id: "123",
    onClick: (id) => setClicked(id),
    onFocus: (focused2, id) => setFocused(focused2 ? id : ""),
    onHover: (hovered2, id) => setHovered(hovered2 ? id : "")
  }, /* @__PURE__ */ React.createElement("svg", {
    width: clicked ? 50 : hovered || focused ? 35 : 30,
    height: clicked ? 50 : hovered || focused ? 43 : 38,
    fill: clicked ? "#000" : hovered || focused ? "#FF0000" : "#F46036",
    viewBox: "0 0 30 38"
  }, /* @__PURE__ */ React.createElement("path", {
    x: "50%",
    y: "40%",
    d: "M30 15.0882C30 23.4212 23.3333 30.7353 15 38C7.22222 31.2941 0 23.4212 0 15.0882C0 6.75523 6.71573 0 15 0C23.2843 0 30 6.75523 30 15.0882Z"
  }))));
};
const Map_With_Multiple_Interactive_Markers = () => {
  const [selectedId, setSelectedId] = useState("");
  const [focusedId, setFocusedId] = useState("");
  const [hoveredId, setHoveredId] = useState("");
  return /* @__PURE__ */ React.createElement(Map, {
    bounds: MAP_MULTIPLE_LOCATIONS.map((location) => location.coordinate),
    clientKey: "gme-yextinc"
  }, MAP_MULTIPLE_LOCATIONS.map((location, index) => /* @__PURE__ */ React.createElement(Marker, {
    key: location.id,
    coordinate: location.coordinate,
    id: location.id,
    onClick: (id) => setSelectedId(id),
    onFocus: (focused, id) => setFocusedId(focused ? id : ""),
    onHover: (hovered, id) => setHoveredId(hovered ? id : ""),
    zIndex: location.id === selectedId ? 1 : location.id === focusedId || location.id === hoveredId ? 2 : 0
  }, /* @__PURE__ */ React.createElement("svg", {
    width: location.id === selectedId ? 40 : 30,
    height: location.id === selectedId ? 50 : 38,
    fill: location.id === selectedId ? "white" : "black",
    viewBox: "0 0 30 38"
  }, /* @__PURE__ */ React.createElement("path", {
    x: "50%",
    y: "40%",
    d: "M30 15.0882C30 23.4212 23.3333 30.7353 15 38C7.22222 31.2941 0 23.4212 0 15.0882C0 6.75523 6.71573 0 15 0C23.2843 0 30 6.75523 30 15.0882Z",
    stroke: location.id === focusedId || location.id === hoveredId ? "white" : "none"
  }), /* @__PURE__ */ React.createElement("text", {
    x: "50%",
    y: "40%",
    fontSize: "16px",
    fontWeight: "bold",
    dominantBaseline: "middle",
    textAnchor: "middle",
    fill: location.id === selectedId ? "black" : "white"
  }, index)))));
};
export {
  Map_With_Current_Center_And_Zoom,
  Map_With_Inline_Svg,
  Map_With_Marker,
  Map_With_Multiple_Interactive_Markers,
  Map_With_Single_Interactive_Marker,
  Multiple_Maps,
  Simple_Map,
  map_stories_default as default
};
