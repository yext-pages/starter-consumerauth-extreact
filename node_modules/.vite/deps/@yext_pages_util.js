import {
  __commonJS,
  __publicField,
  __toESM
} from "./chunk-IN47U6CF.js";

// node_modules/browser-or-node/lib/index.js
var require_lib = __commonJS({
  "node_modules/browser-or-node/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    var isBrowser2 = typeof window !== "undefined" && typeof window.document !== "undefined";
    var isNode2 = typeof process !== "undefined" && process.versions != null && process.versions.node != null;
    var isWebWorker = (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" && self.constructor && self.constructor.name === "DedicatedWorkerGlobalScope";
    var isJsDom = typeof window !== "undefined" && window.name === "nodejs" || typeof navigator !== "undefined" && (navigator.userAgent.includes("Node.js") || navigator.userAgent.includes("jsdom"));
    var isDeno2 = typeof Deno !== "undefined" && typeof Deno.version !== "undefined" && typeof Deno.version.deno !== "undefined";
    exports.isBrowser = isBrowser2;
    exports.isWebWorker = isWebWorker;
    exports.isNode = isNode2;
    exports.isJsDom = isJsDom;
    exports.isDeno = isDeno2;
  }
});

// node_modules/@yext/pages/dist/util/runtime.js
var import_browser_or_node = __toESM(require_lib(), 1);
var Runtime = class {
  constructor() {
    __publicField(this, "name");
    __publicField(this, "isServerSide");
    __publicField(this, "version");
    var _a;
    if (import_browser_or_node.isDeno) {
      this.name = "deno";
      this.version = "";
      if (import_browser_or_node.isBrowser) {
        this.version = ((_a = window.Deno) == null ? void 0 : _a.version.deno) || "";
      }
      this.isServerSide = true;
    } else if (import_browser_or_node.isNode) {
      this.name = "node";
      this.version = process.versions.node;
      this.isServerSide = true;
    } else if (import_browser_or_node.isBrowser) {
      this.name = "browser";
      this.version = navigator.userAgent;
      this.isServerSide = false;
    } else {
      this.name = "unknown";
      this.version = "";
      this.isServerSide = false;
    }
  }
  getNodeMajorVersion() {
    if (this.name != "node") {
      throw new Error("Not running in Node.");
    }
    return +this.version.split(".")[0];
  }
};
var getRuntime = () => {
  return new Runtime();
};

// node_modules/@yext/pages/dist/util/fetch.js
var fetchInternal = async (input, init) => {
  const runtime = getRuntime();
  if (runtime.name == "node" && runtime.getNodeMajorVersion() < 18) {
    const { default: crossFetch } = await import("./browser-ponyfill-6L33DDEV.js");
    return crossFetch(input, init);
  }
  return fetch(input, init);
};

// node_modules/@yext/pages/dist/util/env.js
var isProduction = (domain) => {
  var _a;
  const runtime = getRuntime();
  return runtime.name === "browser" && domain === ((_a = window == null ? void 0 : window.location) == null ? void 0 : _a.hostname);
};
export {
  fetchInternal as fetch,
  getRuntime,
  isProduction
};
//# sourceMappingURL=@yext_pages_util.js.map
